# We need to verify the conditions given in Thm 7.2 of Offen's
sage: var('t')
sage: var('s')
sage: var('r')
sage: var('m')
sage: var('n')
sage: var('o')
sage: var('p')
sage: var('q')
sage: var('l')
sage: var('b')
sage: var('r3')
sage: var('r4')


u_art= matrix([[1, -r, 0, 0, 0, 0, 0, 0],\
                   [0, 1,  0, 0, 0, 0, 0, 0],\
                   [r,-r^2, 1 ,-r ,0 ,0 ,0, 0],\
                   [0, r,  0, 1, 0, 0, 0, 0],\
                   [0 ,0 ,0 ,0 ,1 ,-r ,0 ,0],\
                   [0 ,0 ,0 ,0 ,0 ,1 ,0 ,0],\
                   [0 ,0 ,0 ,0 ,0, 0 ,1, -r],\
                   [0 ,0 ,0 ,0 ,0 ,0 ,0, 1]])


u_ar = u_art.transpose()
u_a = u_ar.subs(r=1)
u_al= u_ar.subs(r=l)

u_mart = matrix([[1, 0, r, 0, 0, 0, 0, 0],\
                   [-r, 1,-r^2, r, 0, 0, 0, 0],\
                   [0, 0, 1 ,0 ,0 ,0 ,0, 0],\
                   [0, 0, -r, 1, 0, 0, 0, 0],\
                   [0 ,0 ,0 ,0 ,1 ,0 ,0 ,0],\
                   [0 ,0 ,0 ,0 ,-r ,1 ,0 ,0],\
                   [0 ,0 ,0 ,0 ,0, 0 ,1, 0],\
                   [0 ,0 ,0 ,0 ,0 ,0 ,-r, 1]])


u_mar = u_mart.transpose()
u_ma = u_mar.subs(r=-1)
n_a = u_a*u_ma*u_a



u_brt = matrix([[1, 0, 0, 0, 0, 0, 0, 0],\
                   [0, 1, 0 ,0 ,b ,0 ,0, 0],\
                   [0, 0, 1 ,0 ,0 ,0 ,0, 0],\
                   [0, 0, 0, 1, 0, 0, 0, 0],\
                   [0 ,0 ,0 ,0 ,1 ,0 ,0 ,0],\
                   [0 ,0 ,0 ,0 ,0 ,1 ,0 ,0],\
                   [0 ,0 ,0 ,0 ,0, 0 ,1, 0],\
                   [0 ,0 ,-b ,0 ,0 ,0 ,0, 1]])


u_br = u_brt.transpose()
u_b = u_br.subs(b=1)
u_bl= u_br.subs(b=l)

u_mbrt = matrix([[1, 0, 0, 0, 0, 0, 0, 0],\
                    [0, 1, 0, 0 ,0 ,0 ,0, 0],\
                    [0, 0, 1 ,0 ,0 ,0 ,0, -b],\
                    [0, 0, 0, 1, 0, 0, 0, 0],\
                    [0 ,b ,0 ,0 ,1 ,0 ,0 ,0],\
                    [0 ,0 ,0 ,0 ,0 ,1 ,0 ,0],\
                    [0 ,0 ,0 ,0 ,0, 0 ,1, 0],\
                    [0 ,0 ,0 ,0 ,0 ,0 ,0, 1]])

u_mbr = u_mbrt.transpose()
u_mb = u_mbr.subs(b=-1)
n_b = u_b*u_mb*u_b


u_abrt = matrix([[1, 0, 0, 0, -n, 0, 0, 0],\
                    [0, 1, 0, 0 ,0 ,n ,0, 0],\
                    [0, 0, 1 ,0 ,0 ,0 ,0, 0],\
                    [0, 0, 0, 1, n, 0, 0, 0],\
                    [0 ,0, 0 ,0 ,1 ,0 ,0 ,0],\
                    [0 ,0 ,0 ,0 ,0 ,1 ,0 ,0],\
                    [0 ,0 ,n ,0 ,0, 0 ,1, 0],\
                    [n ,0, 0, -n, -n^2,0 ,0, 1]])

u_abr = u_abrt.transpose()
u_ab = u_abr.subs(n=1)
u_abm= u_abr.subs(n=m)



u_2abrt = matrix([[1, 0, 0, 0, 0, -o,0, 0],\
                    [0, 1, 0, 0 ,0 ,0 ,0, 0],\
                    [0, 0, 1 ,0 ,-o,0 ,0, 0],\
                    [0, 0, 0, 1, 0, o, 0, 0],\
                    [0 ,0 ,0 ,0 ,1 ,0 ,0 ,0],\
                    [0 ,0 ,0 ,0 ,0 ,1 ,0 ,0],\
                    [-o,0 ,0 ,o ,0, o^2,1, 0],\
                    [0 ,o ,0 ,0 ,0 ,0 ,0, 1]])

u_2abr = u_2abrt.transpose()
u_2ab = u_2abr.subs(o=1)
u_2abn= u_2abr.subs(o=n)

u_3abrt = matrix([[1, 0, 0, 0, 0, 0, 0, 0],\
                    [0, 1, 0, 0 ,0 ,0 ,0, 0],\
                    [0, 0, 1 ,0 ,0 ,-p ,0, 0],\
                    [0, 0, 0, 1, 0, 0, 0, 0],\
                    [0 ,0 ,0 ,0 ,1 ,0 ,0 ,0],\
                    [0 ,0 ,0 ,0 ,0 ,1 ,0 ,0],\
                    [0 ,-p,0 ,0 ,0,0 ,1, 0],\
                    [0 ,0 ,0 ,0 ,0 ,0 ,0, 1]])

u_3abr= u_3abrt.transpose()
u_3ab = u_3abr.subs(p=1)
u_3abr3 = u_3abr.subs(p=r3)



u_3a2brt= matrix([[1, 0, 0, 0, 0, 0, 0, 0],\
                      [0, 1, 0, 0 ,0 ,0 ,0, 0],\
                      [0, 0, 1 ,0 ,0 ,0 ,0, 0],\
                      [0, 0, 0, 1, 0, 0, 0, 0],\
                      [0 ,0 ,0 ,0 ,1 ,0 ,0 ,0],\
                      [0 ,0 ,0 ,0 ,0 ,1 ,0 ,0],\
                      [0 ,0 ,0 ,0 ,-q,0 ,1, 0],\
                      [0 ,0 ,0 ,0 ,0 ,-q ,0, 1]])

u_3a2br= u_3a2brt.transpose()
u_3a2b = u_3a2br.subs(q=1)
u_3a2br4 = u_3a2br.subs(q=r4)
print(u_3a2br4)


tor2 = matrix([[1, 0, 0, 0, 0, 0, 0, 0],\
                      [0, t^(-1)*s^(2), 0, 0 ,0 ,0 ,0, 0],\
                      [0, 0,s^(-2)*t,0 ,0 ,0 ,0, 0],\
                      [0, 0, 0, 1, 0, 0, 0, 0],\
                      [0 ,0 ,0 ,0 ,t*s^(-1) ,0 ,0 ,0],\
                      [0 ,0 ,0 ,0 ,0 ,s ,0 ,0],\
                      [0 ,0 ,0 ,0 ,0 ,0 ,s^(-1), 0],\
                      [0 ,0 ,0 ,0 ,0 ,0 ,0, s*t^(-1)]])

print("torus 2, Pb")
t_0 = tor2.subs(t=1,s=-1)
t_1= tor2.subs(t=-1, s=1)
t_2= tor2.subs(t=-1, s=-1)
print(t_0)
print("\n")
print(t_1)
print("\n")
print(t_2)



sage: var('x')
u_mbx=u_mbr.subs(b=x)
print("tor*u_br*u_mbx=")
M= tor2*u_br*u_mbx
print("\n")
m2= u_br*tor2*u_mbx*n_b

